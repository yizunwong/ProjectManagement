/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.projectmanagement.gui.dashboard;

import com.mycompany.projectmanagement.FileController;
import com.mycompany.projectmanagement.FileController.Course;
import com.mycompany.projectmanagement.UserController;
import com.mycompany.projectmanagement.gui.model.ModelCard;
import static com.mycompany.projectmanagement.gui.panel.AssignAssessmentPanel.assessment_columns;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import org.json.JSONArray;

/**
 *
 * @author yizun
 */
public class PorjectManagerDashboard extends javax.swing.JPanel {

    private final UserController userController;
    private String entry_level;
    private String selectedCourse;
    private String[] courses;
    private JSONArray searchedArray;
    public final FileController.FileService fs;

    /**
     * Creates new form PorjectManagerDashboard
     */
    public PorjectManagerDashboard() {
        initComponents();
        this.userController = new UserController();
        this.fs = new FileController.FileService();
        fs.showFileData(dataTable, assessment_columns, "assessment.txt", null,0);
        initialCard();
        initializeComboBox();
    }

    public final void initialCard() {
        String[] status = {"In Progress"};
        HashMap<String, Integer> assessment = fs.countOccurrences("assessment.txt", "status", status, null);
        card1.setData(new ModelCard(new ImageIcon(getClass().getResource("/com/mycompany/projectmanagement/icon/projects_icon.png")), 
                "Total Project", assessment.get("In Progress").toString(), "Project that is in-progress"));

    }

    private void initializeComboBox() {
        Course cr = new Course();
        String[] intake_dates = cr.findIntake(null, null);
        intakeComboBox.setModel(new DefaultComboBoxModel<>(intake_dates));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pieChart1 = new com.mycompany.projectmanagement.gui.component.PieChart();
        card1 = new com.mycompany.projectmanagement.gui.component.Card();
        assessmentSearchField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        intakeComboBox = new javax.swing.JComboBox<>();
        entryLevelComboBox = new javax.swing.JComboBox<>();
        courseComboBox = new javax.swing.JComboBox<>();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(pieChart1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 1210, 280));

        card1.setColor1(new java.awt.Color(153, 255, 153));
        add(card1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 310, 150));

        assessmentSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                assessmentSearchFieldKeyPressed(evt);
            }
        });
        add(assessmentSearchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 310, -1));

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ));
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 1520, 520));

        intakeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        intakeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intakeComboBoxActionPerformed(evt);
            }
        });
        add(intakeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 320, 150, -1));

        entryLevelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Foundation", "Diploma", "Degree", "Masters Degree", "PhD" }));
        entryLevelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryLevelComboBoxActionPerformed(evt);
            }
        });
        add(entryLevelComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 320, 200, -1));

        courseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        courseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseComboBoxActionPerformed(evt);
            }
        });
        add(courseComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 320, 200, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assessmentSearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_assessmentSearchFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String searchValue = assessmentSearchField.getText();
            UserController.User user = userController.new User();
            searchedArray = user.seachUser(searchValue, "assessment.txt",null);
            fs.showFileData(dataTable, assessment_columns, "assessment.txt", searchedArray,0);

        }
    }//GEN-LAST:event_assessmentSearchFieldKeyPressed

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked

    }//GEN-LAST:event_dataTableMouseClicked

    private void intakeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intakeComboBoxActionPerformed
        // TODO add your handling code here:
        String intake_date = intakeComboBox.getSelectedItem().toString();
        UserController.User user = userController.new User();
        searchedArray = user.seachUser(intake_date, "assessment.txt",null);
        fs.showFileData(dataTable, assessment_columns, "assessment.txt", searchedArray,0);

    }//GEN-LAST:event_intakeComboBoxActionPerformed

    private void entryLevelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryLevelComboBoxActionPerformed
        // TODO add your handling code here:
        this.entry_level = entryLevelComboBox.getSelectedItem().toString();
        Course course = new Course();
        if ("-".equals(entry_level)) {
            initializeComboBox();
            fs.showFileData(dataTable, assessment_columns, "assessment.txt", null,0);

        }
        this.courses = course.getCourse(entry_level);
        courseComboBox.setModel(new DefaultComboBoxModel<>(courses));
    }//GEN-LAST:event_entryLevelComboBoxActionPerformed

    private void courseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseComboBoxActionPerformed
        // TODO add your handling code here:
        UserController.User user = userController.new User();
        this.selectedCourse = courseComboBox.getSelectedItem().toString();
        Course course = new Course();
        String courseID = course.findCourseID(entry_level, selectedCourse);
        searchedArray = user.seachUser(courseID, "assessment.txt", null);
        fs.showFileData(dataTable, assessment_columns, "assessment.txt", searchedArray,0);
    }//GEN-LAST:event_courseComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField assessmentSearchField;
    public com.mycompany.projectmanagement.gui.component.Card card1;
    private javax.swing.JComboBox<String> courseComboBox;
    public static javax.swing.JTable dataTable;
    private javax.swing.JComboBox<String> entryLevelComboBox;
    private javax.swing.JComboBox<String> intakeComboBox;
    private javax.swing.JScrollPane jScrollPane1;
    public com.mycompany.projectmanagement.gui.component.PieChart pieChart1;
    // End of variables declaration//GEN-END:variables
}
