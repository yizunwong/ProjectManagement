/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.projectmanagement.gui.panel;

import com.mycompany.projectmanagement.FileController;
import com.mycompany.projectmanagement.FileController.Booking;
import com.mycompany.projectmanagement.FileController.VerifyBooking;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.DefaultComboBoxModel;

public class VerifyBookingPanel extends javax.swing.JPanel {

    private String module;
    private String request_date;
    private String lecturer;
    private String request_id;
    private String status;
    private String student_id;
    private String presentation_id;
    private String remark;
    
    public VerifyBookingPanel() {
        initComponents();
        initializeComboBox();
    }

    public void setFieldData(VerifyBooking verifybooking) {
        verifybooking.setPresentationID(presentation_id);
        verifybooking.setLecturer(lecturer);
        verifybooking.setModule(module);
        verifybooking.setRequestDate(request_date);
        verifybooking.setRequestID(request_id);
        verifybooking.setStatus(status);
        verifybooking.setStudentID(student_id);
        verifybooking.setRemark(remark);
    }
    
    public void setUpdateFieldData(Booking booking) {
        booking.setLecturer(lecturer);
        booking.setModule(module);
        booking.setRequestDate(request_date);
        booking.setRequestID(request_id);
        booking.setStatus(status);
        booking.setStudentID(student_id);
        booking.setRemark(remark);
    }
    
    public void getFieldData(){
        presentation_id = PresentationIDField.getText().trim();
        module = ModuleComboBox.getSelectedItem().toString();
        LocalTime time = dateTimePicker1.timePicker.getTime();
        LocalDate date = dateTimePicker1.datePicker.getDate();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        String formattedDate = date.format(dateFormatter);
        request_date = (formattedDate + "," + time.toString());
        lecturer = LecturerField.getText().trim();
        request_id = RequestField.getText().trim();
        status = StatusComboBox.getSelectedItem().toString();
        student_id = StudentIDField.getText().trim();
        remark = RemarkField.getText().trim();
    }
    
    private void initializeComboBox() {
        FileController.Course cr = new FileController.Course();
        String[] modules = cr.findModule(null, null);
        ModuleComboBox.setModel(new DefaultComboBoxModel<>(modules));
    }
    
    void setVerifyBookingData(Object[] rowData) {
        RequestField.setText(rowData[0].toString());
        StudentIDField.setText(rowData[1].toString());
        String dateTimeString = rowData[2].toString();

        try {
            // Split the date and time
            String[] parts = dateTimeString.split(",");
            String dateString = parts[0];
            String timeString = parts.length > 1 ? parts[1] : "00:00:00"; // default time if not provided

            // Parse the date and time
            LocalDate date = LocalDate.parse(dateString, DateTimeFormatter.ofPattern("yyyy/MM/dd"));
            LocalTime time = LocalTime.parse(timeString, DateTimeFormatter.ofPattern("HH:mm"));

            // Set the date and time on the picker components
            dateTimePicker1.datePicker.setDate(date); // You may need to convert LocalDate to the appropriate type for your datePicker
            dateTimePicker1.timePicker.setTime(time); // You may need to convert LocalTime to the appropriate type for your timePicker
        } catch (DateTimeParseException e) {
            // Handle the error (e.g., show an error message or log the issue)
            e.printStackTrace();
        }
        ModuleComboBox.setSelectedItem(rowData[3].toString());
        LecturerField.setText(rowData[4].toString());
        StatusComboBox.setSelectedItem(rowData[5].toString());
        RemarkField.setText(rowData[6].toString());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        PresentationIDField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        RequestField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        StudentIDField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dateTimePicker1 = new com.github.lgooddatepicker.components.DateTimePicker();
        jLabel5 = new javax.swing.JLabel();
        ModuleComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        LecturerField = new javax.swing.JTextField();
        SubmitBtn = new javax.swing.JButton();
        ResetBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        StatusComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        RemarkField = new javax.swing.JTextField();

        jLabel1.setText("Presentation ID :");

        jLabel2.setText("Request ID :");

        jLabel3.setText("Student ID :");

        jLabel4.setText("Request Presentation Date :");

        jLabel5.setText("Module :");

        ModuleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Lecturer :");

        SubmitBtn.setText("Submit");
        SubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBtnActionPerformed(evt);
            }
        });

        ResetBtn.setText("Reset");
        ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetBtnActionPerformed(evt);
            }
        });

        jLabel7.setText("Status :");

        StatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Accepted", "Rejected" }));

        jLabel8.setText("Remark :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(PresentationIDField)
                                    .addComponent(RequestField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addComponent(jLabel3)
                                .addGap(37, 37, 37)
                                .addComponent(StudentIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(39, 39, 39)
                                .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LecturerField)
                                    .addComponent(ModuleComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(StatusComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RemarkField, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(SubmitBtn)
                        .addGap(148, 148, 148)
                        .addComponent(ResetBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(PresentationIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(RequestField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(StudentIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ModuleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(LecturerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(StatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(RemarkField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitBtn)
                    .addComponent(ResetBtn))
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBtnActionPerformed
        VerifyBooking verifybooking = new VerifyBooking();
        getFieldData();
        setFieldData(verifybooking);
        verifybooking.saveFile("Presentation.txt");
        verifybooking.updateFile("Request.txt", verifybooking.getVerifyBooking());
        
        FileController.FileService fs = new FileController.FileService();
        fs.showFileData(VerifyBookingList.PresentationTable, VerifyBookingList.Presentation_columns, "Presentation.txt", null,0);
        fs.showFileData(VerifyBookingList.BookingTable, VerifyBookingList.columns, "Request.txt", null,0);
        
        Booking booking = new Booking();
        getFieldData();
        setUpdateFieldData(booking);
        booking.updateFile("Request.txt", booking.getBooking());
//
//        FileController.FileService fs = new FileController.FileService();
//        fs.showFileData(VerifyBookingList.BookingTable, VerifyBookingList.columns, "Request.txt", null);
    }//GEN-LAST:event_SubmitBtnActionPerformed

    private void ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResetBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LecturerField;
    private javax.swing.JComboBox<String> ModuleComboBox;
    private javax.swing.JTextField PresentationIDField;
    private javax.swing.JTextField RemarkField;
    private javax.swing.JTextField RequestField;
    private javax.swing.JButton ResetBtn;
    private javax.swing.JComboBox<String> StatusComboBox;
    private javax.swing.JTextField StudentIDField;
    private javax.swing.JButton SubmitBtn;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
