/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.projectmanagement.gui.panel;

import com.mycompany.projectmanagement.FileController;
import com.mycompany.projectmanagement.FileController.Course;
import static com.mycompany.projectmanagement.gui.panel.AssessmentForm.secondMarkerField;
import static com.mycompany.projectmanagement.gui.panel.AssessmentForm.supervisorField;
import com.mycompany.projectmanagement.UserController;
import static com.mycompany.projectmanagement.gui.panel.AssessmentForm.intakeComboBox;
import java.awt.event.KeyEvent;
import javax.swing.DefaultComboBoxModel;
import org.json.JSONArray;
import static com.mycompany.projectmanagement.gui.panel.AssessmentForm.moduleComboBox;

/**
 *
 * @author yizun
 */
public class AssignAssessmentPanel extends javax.swing.JPanel {

    public final static String[] student_columns = {"ID", "Name", "IC", "Gender", "Email", "Entry Level", "Course", "Intake Date"};
    public final static String[] lecturer_columns = {"ID", "Name", "IC", "Gender", "Email", "Department", "Education"};
    public final static String[] assessment_columns = {"assessment_id", "student_id", "course_id", "intake_date", "module", "assessment_type",
        "supervisor", "second_marker", "status", "due_time"};
    private String selectedLecturer;
    private final UserController userController;
    private String entry_level;
    private String[] courses;
    private String selectedCourse;

    /**
     * Creates new form AssignAssessmentPanel
     */
    public AssignAssessmentPanel() {
        initComponents();
        FileController.FileService fs = new FileController.FileService();
        fs.showFileData(dataTable, assessment_columns, "assessment.txt", null);
        fs.showFileData(userTable, lecturer_columns, "lecturer.txt", null);
        this.userController = new UserController();

    }


    private void initializeComboBox() {
        FileController.Course cr = new FileController.Course();
        String[] modules = cr.findModule(null, null);
        String[] intake_dates = cr.findIntake(null, null);
        intakeComboBox.setModel(new DefaultComboBoxModel<>(intake_dates));
        moduleComboBox.setModel(new DefaultComboBoxModel<>(modules));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        assessmentSearchField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        lecturerSearchField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        assessmentPanel1 = new com.mycompany.projectmanagement.gui.panel.AssessmentForm();
        assignLecturerBtn = new javax.swing.JButton();
        assignSMBtn = new javax.swing.JButton();
        entryLevelComboBox = new javax.swing.JComboBox<>();
        courseComboBox = new javax.swing.JComboBox<>();

        assessmentSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                assessmentSearchFieldKeyPressed(evt);
            }
        });

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ));
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);

        lecturerSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lecturerSearchFieldKeyPressed(evt);
            }
        });

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ));
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(userTable);

        assessmentPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        assignLecturerBtn.setText("Assign Lecturer");
        assignLecturerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignLecturerBtnActionPerformed(evt);
            }
        });

        assignSMBtn.setText("Assign Second Marker");
        assignSMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignSMBtnActionPerformed(evt);
            }
        });

        entryLevelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Foundation", "Diploma", "Degree", "Masters Degree", "PhD" }));
        entryLevelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryLevelComboBoxActionPerformed(evt);
            }
        });

        courseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        courseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(assessmentPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lecturerSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(assignLecturerBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(assignSMBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(assessmentSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(entryLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1466, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assessmentSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entryLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lecturerSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignLecturerBtn)
                    .addComponent(assignSMBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(assessmentPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assessmentSearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_assessmentSearchFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String searchValue = assessmentSearchField.getText();
            System.out.println(searchValue);
            FileController.FileService fs = new FileController.FileService();
            UserController.User user = userController.new User();
            JSONArray searchedArray = user.seachUser(searchValue, "assessment.txt");
            fs.showFileData(dataTable, assessment_columns, "assessment.txt", searchedArray);
            System.out.println(searchedArray);

        }
    }//GEN-LAST:event_assessmentSearchFieldKeyPressed

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
        int rowIndex = dataTable.getSelectedRow(); // Get the selected row index

        // Ensure a valid row is selected
        if (rowIndex != -1) {
            int columnCount = dataTable.getColumnCount(); // Get the number of columns

            // Retrieve data from the table model for the clicked row
            Object[] rowData = new Object[columnCount];
            for (int columnIndex = 0; columnIndex < columnCount; columnIndex++) {
                rowData[columnIndex] = dataTable.getModel().getValueAt(rowIndex, columnIndex);
            }

            assessmentPanel1.setData(rowData);

        }
    }//GEN-LAST:event_dataTableMouseClicked

    private void lecturerSearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lecturerSearchFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String searchValue = lecturerSearchField.getText();
            System.out.println(searchValue);
            FileController.FileService fs = new FileController.FileService();
            UserController.User user = userController.new User();
            JSONArray searchedArray = user.seachUser(searchValue, "lecturer.txt");
            fs.showFileData(userTable, lecturer_columns, "lecturer.txt", searchedArray);

        }
    }//GEN-LAST:event_lecturerSearchFieldKeyPressed

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        // TODO add your handling code here:
        int rowIndex = userTable.getSelectedRow(); // Get the selected row index

        // Ensure a valid row is selected
        if (rowIndex != -1) {
            int columnCount = userTable.getColumnCount(); // Get the number of columns

            // Retrieve data from the table model for the clicked row
            Object[] rowData = new Object[columnCount];
            for (int columnIndex = 0; columnIndex < columnCount; columnIndex++) {
                rowData[columnIndex] = userTable.getModel().getValueAt(rowIndex, columnIndex);
            }
            this.selectedLecturer = (String) rowData[0];
        }
    }//GEN-LAST:event_userTableMouseClicked

    private void assignLecturerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignLecturerBtnActionPerformed
        // TODO add your handling code here:
        supervisorField.setText(selectedLecturer);

    }//GEN-LAST:event_assignLecturerBtnActionPerformed

    private void assignSMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignSMBtnActionPerformed
        // TODO add your handling code here:
        secondMarkerField.setText(selectedLecturer);

    }//GEN-LAST:event_assignSMBtnActionPerformed

    private void entryLevelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryLevelComboBoxActionPerformed
        // TODO add your handling code here:
        FileController.FileService fs = new FileController.FileService();

        this.entry_level = entryLevelComboBox.getSelectedItem().toString();
        Course course = new Course();
        if ("-".equals(entry_level)) {
            initializeComboBox();
            fs.showFileData(dataTable, assessment_columns, "assessment.txt", null);

        }
        this.courses = course.getCourse(entry_level);
        courseComboBox.setModel(new DefaultComboBoxModel<>(courses));
    }//GEN-LAST:event_entryLevelComboBoxActionPerformed

    private void courseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseComboBoxActionPerformed
        this.selectedCourse = courseComboBox.getSelectedItem().toString();
        Course course = new Course();
        String[] modules = course.findModule(entry_level, selectedCourse);
        moduleComboBox.setModel(new DefaultComboBoxModel<>(modules));
        String[] intake = course.findIntake(selectedCourse, entry_level);
        intakeComboBox.setModel(new DefaultComboBoxModel<>(intake));
    }//GEN-LAST:event_courseComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mycompany.projectmanagement.gui.panel.AssessmentForm assessmentPanel1;
    private javax.swing.JTextField assessmentSearchField;
    private javax.swing.JButton assignLecturerBtn;
    private javax.swing.JButton assignSMBtn;
    private javax.swing.JComboBox<String> courseComboBox;
    public static javax.swing.JTable dataTable;
    private javax.swing.JComboBox<String> entryLevelComboBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lecturerSearchField;
    public static javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
